steps:
1 Create a Makefile using vim
2 APP (target): <.c> (dependency)
	gcc <.c> -o APP (Shell script)
Working principle:
	-Before command execution, check if the dependency exists
	if true, execute command
	if not, search for commands below
	-Check for update
Variables:
	Predefined variables:
	AR: archive;
	CC : C compiler
	CXX : C++ compiler
	$@ : Target fullname
	$< : First dependent filename
	$^ : All dependency files
	
	Auto variables can onnly be used in rule commands:
	eg. APP : main.c a.c b.c
		$(cc) -c $^ -o $@
		
Mode matching:
	%.o:%.c
	$(CC) -c $< -o $@
	
Function:
	src=$(wildcard PATTERN)
	Obtain the determined type of file, then seperate by space
	obj=$(patsubst %.c, %.o, $(src))

Complete eg:
src=$(wildcard ./*.c)
obj=$(patsubst %.c,%.o,$(src))
target=APP
$(target):$(obj)
	$(CC) $(obj) -o $(target)
%.o:%.c
	$(CC) -c $< $@
.PHONY:clean
clean:
	rm $(obj) -f
